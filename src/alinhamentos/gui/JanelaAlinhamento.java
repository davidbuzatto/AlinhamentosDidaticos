/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alinhamentos.gui;

import alinhamentos.algoritmos.suporte.Tipo;
import alinhamentos.algoritmos.AlinhamentoGlobal;
import alinhamentos.algoritmos.AlinhamentoLocal;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Prof. Dr. David Buzatto
 */
public class JanelaAlinhamento extends javax.swing.JFrame {

    private AlinhamentoGlobal ag;
    private AlinhamentoLocal al;
    
    /**
     * Creates new form JanelaAlinhamento
     */
    public JanelaAlinhamento() {
        
        initComponents();
        
        pCorMenor.setCor( new Color( Color.HSBtoRGB( (float) (sliderMenor.getValue() / 360.0), 1f, 1f ) ) );
        pCorMaior.setCor( new Color( Color.HSBtoRGB( (float) (sliderMaior.getValue() / 360.0), 1f, 1f ) ) );
        pCorMenor.repaint();
        pCorMaior.repaint();
        painelDesenho.mudarTamanho( 0, 0 );
        
        pCorPrec.setCursor( new Cursor( Cursor.HAND_CURSOR ) );
        pCorPrec.setCor( painelDesenho.getCorPrecedencia() );
        pCorCam.setCursor( new Cursor( Cursor.HAND_CURSOR ) );
        pCorCam.setCor( painelDesenho.getCorCaminho() );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgProtDNA = new javax.swing.ButtonGroup();
        buttonGloLoc = new javax.swing.ButtonGroup();
        menuPop = new javax.swing.JPopupMenu();
        itemSalvar = new javax.swing.JMenuItem();
        scrollPane = new javax.swing.JScrollPane();
        painelDesenho = new alinhamentos.gui.PainelDesenho();
        painelComps = new javax.swing.JPanel();
        painelSequencias = new javax.swing.JPanel();
        lblP1 = new javax.swing.JLabel();
        lblP2 = new javax.swing.JLabel();
        txtP1 = new javax.swing.JTextField();
        txtP2 = new javax.swing.JTextField();
        btnAlinhar = new javax.swing.JButton();
        btnAnt = new javax.swing.JButton();
        btnProx = new javax.swing.JButton();
        painelTipos = new javax.swing.JPanel();
        radioGlobal = new javax.swing.JRadioButton();
        radioLocal = new javax.swing.JRadioButton();
        radioProt = new javax.swing.JRadioButton();
        radioDNA = new javax.swing.JRadioButton();
        painelConfs = new javax.swing.JPanel();
        lblMenor = new javax.swing.JLabel();
        sliderMenor = new javax.swing.JSlider();
        pCorMenor = new alinhamentos.gui.PainelCor();
        lblMaior = new javax.swing.JLabel();
        sliderMaior = new javax.swing.JSlider();
        pCorMaior = new alinhamentos.gui.PainelCor();
        lblZoom = new javax.swing.JLabel();
        sliderZoom = new javax.swing.JSlider();
        checkMatriz = new javax.swing.JCheckBox();
        pCorPrec = new alinhamentos.gui.PainelCor();
        checkCaminho = new javax.swing.JCheckBox();
        pCorCam = new alinhamentos.gui.PainelCor();

        itemSalvar.setText("Salvar imagem...");
        itemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalvarActionPerformed(evt);
            }
        });
        menuPop.add(itemSalvar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alinhamentos");
        setExtendedState(MAXIMIZED_BOTH);

        painelDesenho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                painelDesenhoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout painelDesenhoLayout = new javax.swing.GroupLayout(painelDesenho);
        painelDesenho.setLayout(painelDesenhoLayout);
        painelDesenhoLayout.setHorizontalGroup(
            painelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3479, Short.MAX_VALUE)
        );
        painelDesenhoLayout.setVerticalGroup(
            painelDesenhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(painelDesenho);

        lblP1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblP1.setText("S1:");

        lblP2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblP2.setText("S2:");

        txtP1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        txtP1.setText("MDNNPNINECIPYNCLSNPEVEVL");

        txtP2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        txtP2.setText("MNNVLNSGRTTICDAYNVVAHDPF");

        btnAlinhar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnAlinhar.setText("Alinhar");
        btnAlinhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlinharActionPerformed(evt);
            }
        });

        btnAnt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnAnt.setText("Anterior");
        btnAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntActionPerformed(evt);
            }
        });

        btnProx.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnProx.setText("Pr√≥ximo");
        btnProx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSequenciasLayout = new javax.swing.GroupLayout(painelSequencias);
        painelSequencias.setLayout(painelSequenciasLayout);
        painelSequenciasLayout.setHorizontalGroup(
            painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSequenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelSequenciasLayout.createSequentialGroup()
                        .addComponent(lblP1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtP1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlinhar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelSequenciasLayout.createSequentialGroup()
                        .addComponent(lblP2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtP2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProx)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelSequenciasLayout.setVerticalGroup(
            painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSequenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSequenciasLayout.createSequentialGroup()
                        .addGroup(painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblP1)
                            .addComponent(txtP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSequenciasLayout.createSequentialGroup()
                        .addComponent(btnAlinhar)
                        .addGap(5, 5, 5)))
                .addGroup(painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelSequenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(lblP2)
                        .addComponent(txtP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAnt)
                    .addComponent(btnProx))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonGloLoc.add(radioGlobal);
        radioGlobal.setSelected(true);
        radioGlobal.setText("Global");

        buttonGloLoc.add(radioLocal);
        radioLocal.setText("Local");

        btgProtDNA.add(radioProt);
        radioProt.setSelected(true);
        radioProt.setText("Prote√≠na");

        btgProtDNA.add(radioDNA);
        radioDNA.setText("DNA");

        javax.swing.GroupLayout painelTiposLayout = new javax.swing.GroupLayout(painelTipos);
        painelTipos.setLayout(painelTiposLayout);
        painelTiposLayout.setHorizontalGroup(
            painelTiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTiposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelTiposLayout.createSequentialGroup()
                        .addComponent(radioGlobal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioLocal))
                    .addGroup(painelTiposLayout.createSequentialGroup()
                        .addComponent(radioProt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDNA)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelTiposLayout.setVerticalGroup(
            painelTiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTiposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioGlobal)
                    .addComponent(radioLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelTiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioProt)
                    .addComponent(radioDNA))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblMenor.setText("Menor:");

        sliderMenor.setMaximum(360);
        sliderMenor.setValue(160);
        sliderMenor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMenorStateChanged(evt);
            }
        });

        pCorMenor.setMaximumSize(new java.awt.Dimension(20, 20));
        pCorMenor.setMinimumSize(new java.awt.Dimension(20, 20));
        pCorMenor.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout pCorMenorLayout = new javax.swing.GroupLayout(pCorMenor);
        pCorMenor.setLayout(pCorMenorLayout);
        pCorMenorLayout.setHorizontalGroup(
            pCorMenorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pCorMenorLayout.setVerticalGroup(
            pCorMenorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        lblMaior.setText("Maior:");

        sliderMaior.setMaximum(360);
        sliderMaior.setValue(240);
        sliderMaior.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMaiorStateChanged(evt);
            }
        });

        pCorMaior.setMaximumSize(new java.awt.Dimension(20, 20));
        pCorMaior.setMinimumSize(new java.awt.Dimension(20, 20));
        pCorMaior.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout pCorMaiorLayout = new javax.swing.GroupLayout(pCorMaior);
        pCorMaior.setLayout(pCorMaiorLayout);
        pCorMaiorLayout.setHorizontalGroup(
            pCorMaiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pCorMaiorLayout.setVerticalGroup(
            pCorMaiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        lblZoom.setText("Zoom:");

        sliderZoom.setMaximum(200);
        sliderZoom.setMinimum(1);
        sliderZoom.setValue(1);
        sliderZoom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderZoomStateChanged(evt);
            }
        });

        checkMatriz.setText("Preced√™ncia");
        checkMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMatrizActionPerformed(evt);
            }
        });

        pCorPrec.setMaximumSize(new java.awt.Dimension(20, 20));
        pCorPrec.setMinimumSize(new java.awt.Dimension(20, 20));
        pCorPrec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pCorPrecMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pCorPrecLayout = new javax.swing.GroupLayout(pCorPrec);
        pCorPrec.setLayout(pCorPrecLayout);
        pCorPrecLayout.setHorizontalGroup(
            pCorPrecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pCorPrecLayout.setVerticalGroup(
            pCorPrecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        checkCaminho.setText("Caminho");
        checkCaminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCaminhoActionPerformed(evt);
            }
        });

        pCorCam.setMaximumSize(new java.awt.Dimension(20, 20));
        pCorCam.setMinimumSize(new java.awt.Dimension(20, 20));
        pCorCam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pCorCamMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pCorCamLayout = new javax.swing.GroupLayout(pCorCam);
        pCorCam.setLayout(pCorCamLayout);
        pCorCamLayout.setHorizontalGroup(
            pCorCamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        pCorCamLayout.setVerticalGroup(
            pCorCamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout painelConfsLayout = new javax.swing.GroupLayout(painelConfs);
        painelConfs.setLayout(painelConfsLayout);
        painelConfsLayout.setHorizontalGroup(
            painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConfsLayout.createSequentialGroup()
                        .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaior, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblMenor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblZoom, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sliderMenor, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(sliderMaior, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sliderZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pCorMenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pCorMaior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelConfsLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(checkMatriz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pCorPrec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkCaminho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pCorCam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        painelConfsLayout.setVerticalGroup(
            painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConfsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMenor)
                    .addComponent(sliderMenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pCorMenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMaior)
                    .addComponent(sliderMaior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pCorMaior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblZoom)
                    .addComponent(sliderZoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelConfsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkMatriz)
                        .addComponent(checkCaminho))
                    .addComponent(pCorPrec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pCorCam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout painelCompsLayout = new javax.swing.GroupLayout(painelComps);
        painelComps.setLayout(painelCompsLayout);
        painelCompsLayout.setHorizontalGroup(
            painelCompsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCompsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelSequencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelConfs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelCompsLayout.setVerticalGroup(
            painelCompsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCompsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(painelSequencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(painelTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(painelConfs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1340, Short.MAX_VALUE)
            .addComponent(painelComps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelComps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlinharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlinharActionPerformed
        
        String s1 = txtP1.getText().trim();
        String s2 = txtP2.getText().trim();
        
        if ( s1.length() != 0 && s2.length() != 0 ) {
            if ( radioGlobal.isSelected() ) {
                if ( radioProt.isSelected() ) {
                    ag = new AlinhamentoGlobal( s1, s2, Tipo.PROTEINA );
                } else {
                    ag = new AlinhamentoGlobal( s1, s2, Tipo.DNA );
                }
                painelDesenho.desenharAG( ag );
            } else {
                if ( radioProt.isSelected() ) {
                    al = new AlinhamentoLocal( s1, s2, Tipo.PROTEINA );
                } else {
                    al = new AlinhamentoLocal( s1, s2, Tipo.DNA );
                }
                painelDesenho.desenharAL( al );
            }
        } else {
            JOptionPane.showMessageDialog( this, "As sequ√™ncias devem ter pelo menos um caractere!", "ERRO", JOptionPane.ERROR_MESSAGE );
            painelDesenho.repaint();
        }
        
    }//GEN-LAST:event_btnAlinharActionPerformed

    private void btnAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntActionPerformed
        painelDesenho.anterior();
    }//GEN-LAST:event_btnAntActionPerformed

    private void btnProxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProxActionPerformed
        painelDesenho.proximo();
    }//GEN-LAST:event_btnProxActionPerformed

    private void checkMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMatrizActionPerformed
        
        if ( checkMatriz.isSelected() ) {
            painelDesenho.setDesenharMatrizPrecedencia( true );
        } else {
            painelDesenho.setDesenharMatrizPrecedencia( false );
        }
        painelDesenho.repaint();
        
    }//GEN-LAST:event_checkMatrizActionPerformed

    private void checkCaminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCaminhoActionPerformed
        
        if ( checkCaminho.isSelected() ) {
            painelDesenho.setDesenharCaminhoAlinhamento( true );
        } else {
            painelDesenho.setDesenharCaminhoAlinhamento( false );
        }
        painelDesenho.repaint();
        
    }//GEN-LAST:event_checkCaminhoActionPerformed

    private void sliderMenorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMenorStateChanged
        
        pCorMenor.setCor( new Color( Color.HSBtoRGB( (float) (sliderMenor.getValue() / 360.0), 1f, 1f ) ) );
        pCorMenor.repaint();
        painelDesenho.setCorMenor( sliderMenor.getValue() );
        painelDesenho.repaint();
        
    }//GEN-LAST:event_sliderMenorStateChanged

    private void sliderMaiorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMaiorStateChanged
        
        pCorMaior.setCor( new Color( Color.HSBtoRGB( (float) (sliderMaior.getValue() / 360.0), 1f, 1f ) ) );
        pCorMaior.repaint();
        painelDesenho.setCorMaior( sliderMaior.getValue() );
        painelDesenho.repaint();
        
    }//GEN-LAST:event_sliderMaiorStateChanged

    private void pCorPrecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pCorPrecMouseClicked
        
        Color c = JColorChooser.showDialog( this, "Cor Matriz de Preced√™ncias", pCorPrec.getCor() );
        
        if ( c != null ) {
            pCorPrec.setCor( c );
            pCorPrec.repaint();
            painelDesenho.setCorPrecedencia( c );
            painelDesenho.repaint();
        }
        
    }//GEN-LAST:event_pCorPrecMouseClicked

    private void pCorCamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pCorCamMouseClicked
        
        Color c = JColorChooser.showDialog( this, "Cor do Caminho do Alinhamento", pCorCam.getCor() );
        
        if ( c != null ) {
            pCorCam.setCor( c );
            pCorCam.repaint();
            painelDesenho.setCorCaminho( c );
            painelDesenho.repaint();
        }
        
    }//GEN-LAST:event_pCorCamMouseClicked

    private void sliderZoomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderZoomStateChanged
        
        painelDesenho.zoom( sliderZoom.getValue() );
        painelDesenho.repaint();
        
    }//GEN-LAST:event_sliderZoomStateChanged

    private void painelDesenhoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelDesenhoMousePressed
        
        if ( evt.getButton() == MouseEvent.BUTTON3 ) {
            menuPop.show( (JComponent) evt.getSource(), evt.getX(), evt.getY() );
        }
        
    }//GEN-LAST:event_painelDesenhoMousePressed

    private void itemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalvarActionPerformed
        
        JFileChooser jfc = new JFileChooser();
        jfc.setMultiSelectionEnabled( false );
        jfc.setFileFilter( new FileNameExtensionFilter( "Imagem PNG", "png" ) );
        
        if ( jfc.showSaveDialog( this ) == JFileChooser.APPROVE_OPTION ) {
            
            File f = jfc.getSelectedFile();
            
            if ( f.exists() && JOptionPane.showConfirmDialog( 
                    null, 
                    "Deseja sobrescrever o arquivo existente?", 
                    "Sobresrever", 
                    JOptionPane.YES_NO_OPTION ) != JOptionPane.YES_OPTION ) {
                return;
            }
            
            try {
                
                System.out.println( f.getAbsolutePath() );
                
                if ( !f.getAbsolutePath().endsWith( ".png" ) ) {
                    f = new File( f.getAbsolutePath() + ".png" );
                }
                
                if ( painelDesenho.getImg() != null ) {
                    ImageIO.write( painelDesenho.getImg(), "png", f );
                }
                
            } catch ( IOException ex ) {
                Logger.getLogger( JanelaAlinhamento.class.getName() ).log( Level.SEVERE, null, ex );
            }
            
        }
        
    }//GEN-LAST:event_itemSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
                if ( "Nimbus".equals( info.getName() ) ) {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger(JanelaAlinhamento.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger(JanelaAlinhamento.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger(JanelaAlinhamento.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger(JanelaAlinhamento.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaAlinhamento().setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgProtDNA;
    private javax.swing.JButton btnAlinhar;
    private javax.swing.JButton btnAnt;
    private javax.swing.JButton btnProx;
    private javax.swing.ButtonGroup buttonGloLoc;
    private javax.swing.JCheckBox checkCaminho;
    private javax.swing.JCheckBox checkMatriz;
    private javax.swing.JMenuItem itemSalvar;
    private javax.swing.JLabel lblMaior;
    private javax.swing.JLabel lblMenor;
    private javax.swing.JLabel lblP1;
    private javax.swing.JLabel lblP2;
    private javax.swing.JLabel lblZoom;
    private javax.swing.JPopupMenu menuPop;
    private alinhamentos.gui.PainelCor pCorCam;
    private alinhamentos.gui.PainelCor pCorMaior;
    private alinhamentos.gui.PainelCor pCorMenor;
    private alinhamentos.gui.PainelCor pCorPrec;
    private javax.swing.JPanel painelComps;
    private javax.swing.JPanel painelConfs;
    private alinhamentos.gui.PainelDesenho painelDesenho;
    private javax.swing.JPanel painelSequencias;
    private javax.swing.JPanel painelTipos;
    private javax.swing.JRadioButton radioDNA;
    private javax.swing.JRadioButton radioGlobal;
    private javax.swing.JRadioButton radioLocal;
    private javax.swing.JRadioButton radioProt;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSlider sliderMaior;
    private javax.swing.JSlider sliderMenor;
    private javax.swing.JSlider sliderZoom;
    private javax.swing.JTextField txtP1;
    private javax.swing.JTextField txtP2;
    // End of variables declaration//GEN-END:variables
}
